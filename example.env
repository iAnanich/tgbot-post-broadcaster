
# Top-level logging level
LOG_LEVEL=INFO

# URI of the database
#DB_URI=sqlite:///db.sqlite
DB_URI=postgresql://user:pass@localhost:5432/tgbot-post-broadcaster
# Note: it can be used with SQLite, but PostgreSQL is recommended

# Bot API token obtained from @BotFather
TGBOT_APIKEY=

# IF bot has to fetch chat titles upon receiving new post from source channel
TGBOT_AUTOUPDATE_CHAT_TITLES=False

# List of Bot admin usernames with or without "@" separated by comma ","
TGBOT_ADMIN_USERNAMES=

# Channel IDs for sourcing posts
TGBOT_SOURCE_CHANNEL=

# Comma separated list of Telegram hastags (with or without "#" char) (NOTE: under deprecation)
TGBOT_POST_TAGS=

# Comma separated list of Telegram hastags, which extend range of receiver groups (with or without "#" char)
TGBOT_POST_EXTENDING_TAGS=

# Comma separated list of Telegram hastags, which restrict range of receiver groups (with or without "#" char)
TGBOT_POST_RESTRICTIVE_TAGS=

# When enabled, bot will reply to received posts in the source channel
TGBOT_LOG_REPLIES=False

# When enabled, post forwarding will happen with slight delay between each forward
TGBOT_SLOW_MODE=True

# Delay in seconds between each forward when slow mode is enabled
TGBOT_SLOW_MODE_DELAY=0.1

# If disabled, /tags command wont list all available tags
TGBOT_DISPLAY_ALL_TAGS=off

# ================
#  ~ PostgreSQL ~
# ----------------
POSTGRES_USER=user
POSTGRES_PASSWORD=pass
POSTGRES_DB=tgbot-post-broadcaster
# ================

# ============
#  ~ Docker ~
# ------------
IMAGE_NAME=tgbot-post-broadcaster
IMAGE_TAG=edge
COMPOSE_PROJECT_NAME=tgbot-post-broadcaster
COMPOSE_FILE=docker-compose.dev.yml
# ============
